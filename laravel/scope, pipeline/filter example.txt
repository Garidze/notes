MODEL:

		<?php

		namespace App\Models;

		use App\App;
		use Illuminate\Database\Eloquent\Builder;
		use Illuminate\Database\Eloquent\Factories\HasFactory;
		use Illuminate\Database\Eloquent\Model;

		class Country extends Model
		{
			use HasFactory;

			protected $table = 'country';

			protected $fillable = [
				'Name',
			];


			public function cities()
			{
				return $this->hasMany(City::class, 'CountryCode', 'Code');
			}

			public function scopeFiltered(Builder $query)
			{

				$filtered = app(\Illuminate\Pipeline\Pipeline::class)
					->send($query)
					->through([
						\App\Filters\CountryFilters\Country::class,
						\App\Filters\CountryFilters\Population::class,
						\App\Filters\CountryFilters\Search::class,
					])
					->thenReturn()
					->get();

				return $filtered;
				
			}

		}
		
		
		
CONTROLLER:

    public function filter(CountryFilterRequest $request)
    {

        $countries = Country::filtered();

        return view('country.filtered', compact('countries'));

    }
	
	
FILTER CLASS:

	<?php

		namespace App\Filters\CountryFilters;

		class Population
		{
			public function handle($query, $next)
			{

				if (!request()->has('minPopulation') && !request()->has('maxPopulation')) {
					return $next($query);
				}
				if(!request('minPopulation') && !request('maxPopulation')) {
					return $next($query);
				}
				$query = $query
					->where('Population', '>=', request('minPopulation'))
					->where('Population', '<=', request('maxPopulation'));
				return $next($query);
				
			}

		}
		

