1. Положить два файла(ru.json, en.json) из папки с заметками в директорию lang проекта(публикация папки: php artisan lang:publish) для руссификации писем, высылаемых на почту;
	
	
#. app/Http/Controllers/Auth/PasswordResetLinkController.php:

	<?php

		namespace App\Http\Controllers\Auth;

		use App\Http\Controllers\Controller;
		use App\Jobs\ForgotPasswordEmailJob;
		use Illuminate\Http\RedirectResponse;
		use Illuminate\Http\Request;
		use Illuminate\Support\Facades\Password;
		use Illuminate\View\View;

		class PasswordResetLinkController extends Controller
		{
			/**
			 * Display the password reset link request view.
			 */
			public function create(): View
			{
				return view('auth.forgot-password');
			}

			/**
			 * Handle an incoming password reset link request.
			 *
			 * @throws \Illuminate\Validation\ValidationException
			 */
			public function store(Request $request): RedirectResponse
			{
				$request->validate([
					'email' => ['required', 'email', 'exists:users,email'],
				]););


				/*ИЗ КОРОБКИ*/

				// We will send the password reset link to this user. Once we have attempted
				// to send the link, we will examine the response then see the message we
				// need to show to the user. Finally, we'll send out a proper response.

				// проверяет, есть ли указанный e-mail в БД, и если есть
				// отправляет письмо на указанный адрес и возвращает - "passwords.sent"
				$status = Password::sendResetLink(
					$request->only('email')
				);

				// Password::RESET_LINK_SENT возвращает - "passwords.sent"
				return $status == Password::RESET_LINK_SENT
					? back()->with('status', __('passwords.sent'))
					: back()->withInput($request->only('email'))
							->withErrors(['email' => __('passwords.user')]);

				/*END ИЗ КОРОБКИ*/


			}

		}
		
	
