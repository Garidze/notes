1. заметки\laravel\свои функции хелперы(helpers).txt


2. app/Helpers/Helpers.php:

    if (! function_exists('getTranslation')) {

        function getTranslation() {

            $langFile = lang_path( app()->currentLocale() . ".json" );

            return File::exists( $langFile ) ? File::json( $langFile ) : [];

        }

    }


3. resources/js/composables/translate.js:

    export function makeTranslate(translateFile, value) {

        const array = translateFile;

        return array[ value ] != null ? array[ value ] : value;
    }


4. Vue component:

    <template>
        <div>
            <h3 class="text-2xl">Vue test component</h3>
            <h5 class="text-base font-medium mt-4">{{ makeTranslate(convertToArr, 'Cancel') }}</h5>
            <slot name="test" />
        </div>
    </template>

    <script lang="ts">
    import { makeTranslate } from '@/composables/translate';

    export default {

        props: {
            fileTranslate: { type: String },
        },
        data() {
            //
        },
        methods: {
            makeTranslate,
        },
        computed: {
            convertToArr(){
                return JSON.parse(this.fileTranslate)
            }
        },
        beforeMount() {
            // document.addEventListener('click', this.close);
        },
        mounted() {
            // console.log(this.convertToArr);
        },
        unmounted() {
            // document.removeEventListener('click', this.close);
        },

    };
    </script>


5. Blade:

    <div class="my-6 font-semibold">
        <vue-component file-translate="{{ json_encode(getTranslation()) }}" />
    </div>


